version: "2"

networks:
    test:

services:
    ca-org1:
        image: hyperledger/fabric-ca
        environment: 
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
            - FABRIC_CA_SERVER_TLS_ENABLED=true
            - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-tls/tlsca.org1.example.com-cert.pem
            - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-tls/priv_sk
        ports:
            - "7054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
        volumes:
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org1.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
        container_name: ca.org1.example.com
        hostname: ca.org1.example.com
        networks:
            - test

    ca-org2:
        image: hyperledger/fabric-ca
        environment: 
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
            - FABRIC_CA_SERVER_TLS_ENABLED=true
            - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-tls/tlsca.org2.example.com-cert.pem
            - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-tls/priv_sk
        ports:
            - "8054:8054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
        volumes:
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org2.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
        container_name: ca.org2.example.com
        hostname: ca.org2.example.com
        networks:
            - test

    ca-org3:
        image: hyperledger/fabric-ca
        environment: 
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=ca.org3.example.com
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org3.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
            - FABRIC_CA_SERVER_TLS_ENABLED=true
            - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-tls/tlsca.org3.example.com-cert.pem
            - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-tls/priv_sk
        ports:
            - "9054:9054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
        volumes:
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org3.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org3.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
        container_name: ca.org3.example.com
        hostname: ca.org3.example.com
        networks:
            - test

    orderer.example.com:

        image: hyperledger/fabric-orderer
        container_name: orderer.example.com
        dns_search: .
        environment:
            - ORDERER_GENERAL_LOGLEVEL=info
            - FABRIC_LOGGING_SPEC=INFO
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            #enabled tls
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            - ORDERER_METRICS_PROVIDER=prometheus
            - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
            - ORDERER_GENERAL_LISTENPORT=7050
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
        command: orderer
        ports:
            - 7050:7050
            - 8443:8443
        volumes:
            - ../channel/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ../organizations/cryptogen/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
            - ../organizations/cryptogen/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls:/var/hyperledger/orderer/tls
            
        networks:
            - test



    couchdb0:
        container_name: couchdb0
        image: hyperledger/fabric-couchdb
        # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
        # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
        environment:
            - COUCHDB_USER=
            - COUCHDB_PASSWORD=
            # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
            # for example map it to utilize Fauxton User Interface in dev environments.
        ports:
            - "5984:5984"
        networks:
            - test


    peer0.org1.example.com:
        container_name: peer0.org1.example.com
        extends:
            file: base.yaml
            service: peer-base
        environment:
            - FABRIC_LOGGING_SPEC=info
            - ORDERER_GENERAL_LOGLEVEL=info
            - CORE_PEER_LOCALMSPID=Org1MSP

            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_test

            - CORE_PEER_ID=peer0.org1.example.com
            - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
            - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
            - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            # Peer used to bootstrap gossip within organisation
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
            # Exposed for discovery Service
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051

            # - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9440

            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
            - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
            - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
            - CORE_METRICS_PROVIDER=prometheus
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
            - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
        depends_on:
            - couchdb0
        ports:
        - 7051:7051
        volumes:
        - ../organizations/cryptogen/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/crypto/peer/msp
        - ../organizations/cryptogen/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/crypto/peer/tls
        - /var/run/:/host/var/run/
        - ../channel/:/etc/hyperledger/channel/
        networks:
        - test


    couchdb1:
        container_name: couchdb1
        image: hyperledger/fabric-couchdb
        # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
        # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
        environment:
            - COUCHDB_USER=
            - COUCHDB_PASSWORD=
            # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
            # for example map it to utilize Fauxton User Interface in dev environments.
        ports:
            - "6984:5984"
        networks:
            - test


    peer0.org2.example.com:
        container_name: peer0.org2.example.com
        extends:
            file: base.yaml
            service: peer-base
        environment:
            - FABRIC_LOGGING_SPEC=info
            - ORDERER_GENERAL_LOGLEVEL=info
            - CORE_PEER_LOCALMSPID=Org2MSP

            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_test

            - CORE_PEER_ID=peer0.org2.example.com
            - CORE_PEER_ADDRESS=peer0.org2.example.com:8051
            - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
            - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:8052
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
            # Peer used to bootstrap gossip within organisation
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:8051
            # Exposed for discovery Service
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:8051

            # - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9440

            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
            - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
            - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
            - CORE_METRICS_PROVIDER=prometheus
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
            - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
        depends_on:
            - couchdb1
        ports:
        - 8051:8051
        volumes:
        - ../organizations/cryptogen/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/crypto/peer/msp
        - ../organizations/cryptogen/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/crypto/peer/tls
        - /var/run/:/host/var/run/
        - ../channel/:/etc/hyperledger/channel/
        networks:
        - test

    couchdb2:
        container_name: couchdb2
        image: hyperledger/fabric-couchdb
        # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
        # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
        environment:
            - COUCHDB_USER=
            - COUCHDB_PASSWORD=
            # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
            # for example map it to utilize Fauxton User Interface in dev environments.
        ports:
            - "7984:5984"
        networks:
            - test

    peer0.org3.example.com:
        container_name: peer0.org3.example.com
        extends:
            file: base.yaml
            service: peer-base
        environment:
            - FABRIC_LOGGING_SPEC=info
            - ORDERER_GENERAL_LOGLEVEL=info
            - CORE_PEER_LOCALMSPID=Org3MSP

            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_test

            - CORE_PEER_ID=peer0.org3.example.com
            - CORE_PEER_ADDRESS=peer0.org3.example.com:9051
            - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
            - CORE_PEER_CHAINCODEADDRESS=peer0.org3.example.com:9052
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
            # Peer used to bootstrap gossip within organisation
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.example.com:9051
            # Exposed for discovery Service
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.example.com:9051

            # - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9440

            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
            - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
            - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
            - CORE_METRICS_PROVIDER=prometheus
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
            - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
        depends_on:
            - couchdb2
        ports:
            - 9051:9051
        volumes:
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp:/etc/hyperledger/crypto/peer/msp
            - ../organizations/cryptogen/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls:/etc/hyperledger/crypto/peer/tls
            - /var/run/:/host/var/run/
            - ../channel/:/etc/hyperledger/channel/
        networks:
            - test

    
